// Generated from c:/Users/pedro/Documents/52058/cola.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,17,145,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,
1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,
1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,4,13,104,8,13,11,13,12,13,105,
1,14,1,14,1,14,1,14,1,14,5,14,113,8,14,10,14,12,14,116,9,14,1,14,1,14,1,
15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,20,5,20,
134,8,20,10,20,12,20,137,9,20,1,21,4,21,140,8,21,11,21,12,21,141,1,21,1,
21,0,0,22,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
27,14,29,15,31,0,33,0,35,0,37,0,39,0,41,16,43,17,1,0,4,1,0,48,57,2,0,65,
90,97,122,4,0,33,33,46,46,58,59,63,63,3,0,9,10,13,13,32,32,148,0,1,1,0,0,
0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,1,45,1,0,0,0,
3,50,1,0,0,0,5,56,1,0,0,0,7,64,1,0,0,0,9,75,1,0,0,0,11,86,1,0,0,0,13,88,
1,0,0,0,15,90,1,0,0,0,17,92,1,0,0,0,19,94,1,0,0,0,21,96,1,0,0,0,23,98,1,
0,0,0,25,100,1,0,0,0,27,103,1,0,0,0,29,107,1,0,0,0,31,119,1,0,0,0,33,121,
1,0,0,0,35,123,1,0,0,0,37,125,1,0,0,0,39,127,1,0,0,0,41,129,1,0,0,0,43,139,
1,0,0,0,45,46,5,99,0,0,46,47,5,111,0,0,47,48,5,108,0,0,48,49,5,97,0,0,49,
2,1,0,0,0,50,51,5,99,0,0,51,52,5,114,0,0,52,53,5,101,0,0,53,54,5,97,0,0,
54,55,5,114,0,0,55,4,1,0,0,0,56,57,5,101,0,0,57,58,5,110,0,0,58,59,5,99,
0,0,59,60,5,111,0,0,60,61,5,108,0,0,61,62,5,97,0,0,62,63,5,114,0,0,63,6,
1,0,0,0,64,65,5,100,0,0,65,66,5,101,0,0,66,67,5,115,0,0,67,68,5,101,0,0,
68,69,5,110,0,0,69,70,5,99,0,0,70,71,5,111,0,0,71,72,5,108,0,0,72,73,5,97,
0,0,73,74,5,114,0,0,74,8,1,0,0,0,75,76,5,118,0,0,76,77,5,101,0,0,77,78,5,
114,0,0,78,79,5,80,0,0,79,80,5,114,0,0,80,81,5,105,0,0,81,82,5,109,0,0,82,
83,5,101,0,0,83,84,5,114,0,0,84,85,5,111,0,0,85,10,1,0,0,0,86,87,5,40,0,
0,87,12,1,0,0,0,88,89,5,41,0,0,89,14,1,0,0,0,90,91,5,91,0,0,91,16,1,0,0,
0,92,93,5,93,0,0,93,18,1,0,0,0,94,95,5,123,0,0,95,20,1,0,0,0,96,97,5,125,
0,0,97,22,1,0,0,0,98,99,5,33,0,0,99,24,1,0,0,0,100,101,5,44,0,0,101,26,1,
0,0,0,102,104,3,31,15,0,103,102,1,0,0,0,104,105,1,0,0,0,105,103,1,0,0,0,
105,106,1,0,0,0,106,28,1,0,0,0,107,114,5,34,0,0,108,113,3,35,17,0,109,113,
3,31,15,0,110,113,3,37,18,0,111,113,3,39,19,0,112,108,1,0,0,0,112,109,1,
0,0,0,112,110,1,0,0,0,112,111,1,0,0,0,113,116,1,0,0,0,114,112,1,0,0,0,114,
115,1,0,0,0,115,117,1,0,0,0,116,114,1,0,0,0,117,118,5,34,0,0,118,30,1,0,
0,0,119,120,7,0,0,0,120,32,1,0,0,0,121,122,7,1,0,0,122,34,1,0,0,0,123,124,
3,33,16,0,124,36,1,0,0,0,125,126,7,2,0,0,126,38,1,0,0,0,127,128,5,32,0,0,
128,40,1,0,0,0,129,135,3,33,16,0,130,134,3,33,16,0,131,134,3,31,15,0,132,
134,5,95,0,0,133,130,1,0,0,0,133,131,1,0,0,0,133,132,1,0,0,0,134,137,1,0,
0,0,135,133,1,0,0,0,135,136,1,0,0,0,136,42,1,0,0,0,137,135,1,0,0,0,138,140,
7,3,0,0,139,138,1,0,0,0,140,141,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,0,
142,143,1,0,0,0,143,144,6,21,0,0,144,44,1,0,0,0,7,0,105,112,114,133,135,
141,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class colaLexer extends antlr4.Lexer {

    static grammarFileName = "cola.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'cola'", "'crear'", "'encolar'", "'desencolar'", 
                         "'verPrimero'", "'('", "')'", "'['", "']'", "'{'", 
                         "'}'", "'!'", "','" ];
	static symbolicNames = [ null, "COLA", "CREAR", "ENCOLAR", "DESENCOLAR", 
                          "VERPRIMERO", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
                          "LLLAVE", "RLLAVE", "EXCL", "COMA", "NUMERO", 
                          "TEXTO", "ID", "WS" ];
	static ruleNames = [ "COLA", "CREAR", "ENCOLAR", "DESENCOLAR", "VERPRIMERO", 
                      "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LLLAVE", 
                      "RLLAVE", "EXCL", "COMA", "NUMERO", "TEXTO", "DIGITO", 
                      "LETRA", "CARACTER", "SIMBOLO", "ESPACIO", "ID", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

colaLexer.EOF = antlr4.Token.EOF;
colaLexer.COLA = 1;
colaLexer.CREAR = 2;
colaLexer.ENCOLAR = 3;
colaLexer.DESENCOLAR = 4;
colaLexer.VERPRIMERO = 5;
colaLexer.LPAREN = 6;
colaLexer.RPAREN = 7;
colaLexer.LBRACK = 8;
colaLexer.RBRACK = 9;
colaLexer.LLLAVE = 10;
colaLexer.RLLAVE = 11;
colaLexer.EXCL = 12;
colaLexer.COMA = 13;
colaLexer.NUMERO = 14;
colaLexer.TEXTO = 15;
colaLexer.ID = 16;
colaLexer.WS = 17;



